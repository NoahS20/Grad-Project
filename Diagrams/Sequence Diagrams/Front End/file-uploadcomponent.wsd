@startuml
actor User

participant FileUploadComponent as FUC
participant FileTransferService as FTS

User -> FUC: triggerFileInput(event)
FUC -> FUC: alert('Please upload a question file that has the word question in its name and a answer file with any name.')
FUC -> FUC: fileInput.nativeElement.click()

User -> FUC: onQuestionSelected(event)
FUC -> FUC: parseFile(file)
alt file is a question file
    FUC -> FUC: readQuestion(file)
    FUC -> FTS: questionTransfer(file)
else file is not a question file
    FUC -> User: alert('Error: None of the files have the word question in it. Please upload a question file that has the word question in it')
end
FUC -> FUC: onFileChange()

User -> FUC: onFilesSelected(event)
FUC -> FUC: parseFiles(files)
alt totalFiles > maxFiles
    FUC -> User: alert('You can only upload a maximum of ${this.maxFiles} files.')
else totalFiles == 1
    FUC -> User: alert('Error: Only one file selected. Please select two files')
else files are valid
    alt no answer files
        FUC -> FUC: popAll()
        FUC -> User: alert('Error: None of the files are answer files. Files submitted are all question files')
    else answer and question files present
        FUC -> FUC: confirmDialog('Do you want to send the chosen files: ' + this.questionFileNames[0] + " " + this.fileNames[0])
        FUC -> FUC: handleConfirm(result)
        alt result is true
            FUC -> FUC: readQuestion(this.questionFiles[0])
            FUC -> FTS: questionTransfer(this.questionFiles[0])
            FUC -> FUC: readFile(this.answerFiles[0])
            FUC -> FTS: fileTransfer(this.answerFiles[0])
            FUC -> FUC: popAll()
        else result is false
            FUC -> FUC: popAll()
        end
    end
end
FUC -> FUC: onFileChange()

@enduml
